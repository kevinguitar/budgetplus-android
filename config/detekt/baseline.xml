<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>LongParameterList:AuthViewModel.kt$AuthViewModel$( private val bookRepo: BookRepo, private val toaster: Toaster, private val tracker: Tracker, private val stringProvider: StringProvider, private val gso: dagger.Lazy&lt;GoogleSignInOptions&gt;, @ActivityContext private val context: Context, @Named("welcome") private val welcomeDest: KClass&lt;out Activity&gt;, @Named("book") private val bookDest: KClass&lt;out Activity&gt;, referrerHandler: ReferrerHandler, preferenceHolder: PreferenceHolder, )</ID>
    <ID>LongParameterList:OverviewViewModel.kt$OverviewViewModel$( private val bookRepo: BookRepo, private val recordsObserver: RecordsObserver, private val tracker: Tracker, private val authManager: AuthManager, private val userRepo: UserRepo, private val bubbleRepo: BubbleRepo, private val csvWriter: CsvWriter, private val toaster: Toaster, val timeModel: OverviewTimeViewModel, preferenceHolder: PreferenceHolder, )</ID>
    <ID>LongParameterList:RecordViewModel.kt$RecordViewModel$( val calculator: CalculatorViewModel, private val bookRepo: BookRepo, private val recordRepo: RecordRepo, private val bubbleRepo: BubbleRepo, private val authManager: AuthManager, private val fullScreenAdsLoader: FullScreenAdsLoader, private val inAppReviewManager: InAppReviewManager, private val toaster: Toaster, private val tracker: Tracker, private val stringProvider: StringProvider, preferenceHolder: PreferenceHolder, )</ID>
    <ID>LongParameterList:RecordsViewModel.kt$RecordsViewModel$( @Assisted type: RecordType, @Assisted("category") val category: String, @Assisted("authorId") private val authorId: String?, private val userRepo: UserRepo, private val bookRepo: BookRepo, private val bubbleRepo: BubbleRepo, private val tracker: Tracker, private val authManager: AuthManager, recordsObserver: RecordsObserver, preferenceHolder: PreferenceHolder, )</ID>
    <ID>LongParameterList:SettingsViewModel.kt$SettingsViewModel$( private val bookRepo: BookRepo, private val authManager: AuthManager, private val stringProvider: StringProvider, private val toaster: Toaster, private val tracker: Tracker, val vibrator: VibratorManager, @Named("app_package") private val appPackage: String, @Named("google_play_url") private val googlePlayUrl: String, @Named("privacy_policy_url") private val privacyPolicyUrl: String, @Named("auth") private val authDest: KClass&lt;out Activity&gt;, )</ID>
    <ID>LongParameterList:TextField.kt$( value: String, onValueChange: (String) -&gt; Unit, modifier: Modifier = Modifier, title: String, placeholder: String? = null, readOnly: Boolean = false, fontSize: TextUnit = TextUnit.Unspecified, letterSpacing: TextUnit = TextUnit.Unspecified, keyboardOptions: KeyboardOptions = KeyboardOptions( capitalization = KeyboardCapitalization.Sentences, imeAction = ImeAction.Done ), onDone: (KeyboardActionScope.() -&gt; Unit)? = null )</ID>
    <ID>SpreadOperator:CalculatorViewModel.kt$CalculatorViewModel$(*operatorChars)</ID>
    <ID>TooManyFunctions:BookRepoImpl.kt$BookRepoImpl : BookRepo</ID>
    <ID>TooManyFunctions:RecordViewModel.kt$RecordViewModel : ViewModel</ID>
  </CurrentIssues>
</SmellBaseline>
